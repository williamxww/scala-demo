group 'com.bow'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'application' //可选(可自动生成shell启动脚本)
mainClassName = 'AppDemo' //可选（与上行的application插件配套出现）

// fix bug: No such property: daemonServer
ScalaCompileOptions.metaClass.daemonServer = true
ScalaCompileOptions.metaClass.fork = true
ScalaCompileOptions.metaClass.useAnt = false
ScalaCompileOptions.metaClass.useCompileDaemon = false

// 把java与scala的源代码目录全映射到scala上,这样gradle compileScala时就能同时编译java与scala的源代码
sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }

    test {
        scala {
            srcDirs = ['src/test/scala', 'src/test/java']
        }
        java {
            srcDirs = []
        }
    }
}

//项目初始化时,可用gradle createDirs 生成scala及java的src目录(可选)
task "createDirs" << {
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}


repositories {
    // 注意此处是通过C:\Users\acer\.m2\settings.xml找到本地仓库的
    mavenLocal()
    mavenCentral()
//    maven{ url "file://D:/CFile/apache-maven-3.3.9/.m2/repository" }
//    maven { url 'http://maven.oschina.net/content/groups/public/' }
}

dependencies {

    // scala
    compile group:'org.scala-lang', name:'scala-library', version:'2.12.2'
    compile group:'org.scala-lang', name:'scala-compiler', version:'2.12.2'
    compile group:'org.scala-lang', name:'scala-reflect', version:'2.12.2'

    compile 'com.alibaba:fastjson:1.2.21'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// 让生成的jar可直接运行(可选)
jar {
    manifest {
        attributes 'Main-Class': 'AppDemo'
    }
}

tasks.withType(ScalaCompile) { options.encoding = "UTF-8" }
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

task helloWorld {
    doLast {
        println "Hello World"
    }
}
